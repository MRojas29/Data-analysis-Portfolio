/*

Cleaning Data in SQL Queries

*/


Select *
From PortfolioProjectCOVID.dbo.NashvilleHousing

--------------------------------------------------------------------------------------------------------------------------

-- Standardize Date Format
SELECT SaleDate
FROM PortfolioProjectCOVID.dbo.NashvilleHousing

/*SELECT SaleDate, CONVERT(Date,SaleDate,102)
FROM PortfolioProjectCOVID.dbo.NashvilleHousing*/

Select SaleDateConverted, CONVERT(Date,SaleDate)
From PortfolioProjectCOVID.dbo.NashvilleHousing


Update PortfolioProjectCOVID.dbo.NashvilleHousing
SET SaleDate = CONVERT(Date,SaleDate)

-- If it doesn't Update properly

ALTER TABLE PortfolioProjectCOVID.dbo.NashvilleHousing--NashvilleHousing
Add SaleDateConverted Date;

Update PortfolioProjectCOVID.dbo.NashvilleHousing
SET SaleDateConverted = CONVERT(Date,SaleDate)


 --------------------------------------------------------------------------------------------------------------------------

-- Populate Property Address data

/*Select *
From PortfolioProjectCOVID.dbo.NashvilleHousing
--Where PropertyAddress is null
Where ParcelID = '025 07 0 031.00'
order by ParcelID*/



Select a.ParcelID, a.PropertyAddress, b.ParcelID, b.PropertyAddress, ISNULL(a.PropertyAddress,b.PropertyAddress)
From PortfolioProjectCOVID.dbo.NashvilleHousing a
JOIN PortfolioProjectCOVID.dbo.NashvilleHousing b
	on a.ParcelID = b.ParcelID
	AND a.[UniqueID ] <> b.[UniqueID ]
Where a.PropertyAddress is null


Update a
SET PropertyAddress = ISNULL(a.PropertyAddress,b.PropertyAddress)
From PortfolioProjectCOVID.dbo.NashvilleHousing a
JOIN PortfolioProjectCOVID.dbo.NashvilleHousing b
	on a.ParcelID = b.ParcelID
	AND a.[UniqueID ] <> b.[UniqueID ]
Where a.PropertyAddress is null


--------------------------------------------------------------------------------------------------------------------------

-- Breaking out Address into Individual Columns (Address, City, State)


Select PropertyAddress
From PortfolioProjectCOVID.dbo.NashvilleHousing
--Where PropertyAddress is null
order by ParcelID

--Another Way to Separate String from row into columns
/*SELECT
SUBSTRING(PropertyAddress, 1, CHARINDEX(',', PropertyAddress) -1 ) as Address
, SUBSTRING(PropertyAddress, CHARINDEX(',', PropertyAddress) + 1 , LEN(PropertyAddress)) as Address
From PortfolioProjectCOVID.dbo.NashvilleHousing*/

--Easy way to separate string from row into columns
Select
--PARSENAME(REPLACE(PropertyAddress, ',', '.') , 3)
PARSENAME(REPLACE(PropertyAddress, ',', '.') , 2)
,PARSENAME(REPLACE(PropertyAddress, ',', '.') , 1)
From PortfolioProjectCOVID.dbo.NashvilleHousing



ALTER TABLE PortfolioProjectCOVID.dbo.NashvilleHousing
Add PropertySplitAddress Nvarchar(255);

Update PortfolioProjectCOVID.dbo.NashvilleHousing
SET PropertySplitAddress = PARSENAME(REPLACE(PropertyAddress, ',', '.') , 2)

ALTER TABLE PortfolioProjectCOVID.dbo.NashvilleHousing
Add PropertySplitCity Nvarchar(255);

Update PortfolioProjectCOVID.dbo.NashvilleHousing
SET PropertySplitCity = PARSENAME(REPLACE(PropertyAddress, ',', '.') , 1)





Select *
From PortfolioProjectCOVID.dbo.NashvilleHousing

Select PropertyAddress
From PortfolioProjectCOVID.dbo.NashvilleHousing



Select OwnerAddress
From PortfolioProjectCOVID.dbo.NashvilleHousing


Select
PARSENAME(REPLACE(OwnerAddress, ',', '.') , 3)
,PARSENAME(REPLACE(OwnerAddress, ',', '.') , 2)
,PARSENAME(REPLACE(OwnerAddress, ',', '.') , 1)
From PortfolioProjectCOVID.dbo.NashvilleHousing



ALTER TABLE PortfolioProjectCOVID.dbo.NashvilleHousing
Add OwnerSplitAddress Nvarchar(255);

Update PortfolioProjectCOVID.dbo.NashvilleHousing
SET OwnerSplitAddress = PARSENAME(REPLACE(OwnerAddress, ',', '.') , 3)


ALTER TABLE PortfolioProjectCOVID.dbo.NashvilleHousing
Add OwnerSplitCity Nvarchar(255);

Update PortfolioProjectCOVID.dbo.NashvilleHousing
SET OwnerSplitCity = PARSENAME(REPLACE(OwnerAddress, ',', '.') , 2)



ALTER TABLE PortfolioProjectCOVID.dbo.NashvilleHousing
Add OwnerSplitState Nvarchar(255);

Update PortfolioProjectCOVID.dbo.NashvilleHousing
SET OwnerSplitState = PARSENAME(REPLACE(OwnerAddress, ',', '.') , 1)



Select *
From PortfolioProjectCOVID.dbo.NashvilleHousing




--------------------------------------------------------------------------------------------------------------------------


-- Change Y and N to Yes and No in "Sold as Vacant" field


Select Distinct(SoldAsVacant), Count(SoldAsVacant)
From PortfolioProjectCOVID.dbo.NashvilleHousing
Group by SoldAsVacant
order by 2





Select SoldAsVacant
, CASE When SoldAsVacant = 'Y' THEN 'Yes'
	   When SoldAsVacant = 'N' THEN 'No'
	   ELSE SoldAsVacant
	   END
From PortfolioProjectCOVID.dbo.NashvilleHousing


Update PortfolioProjectCOVID.dbo.NashvilleHousing
SET SoldAsVacant = CASE When SoldAsVacant = 'Y' THEN 'Yes'
	   When SoldAsVacant = 'N' THEN 'No'
	   ELSE SoldAsVacant
	   END






-----------------------------------------------------------------------------------------------------------------------------------------------------------

-- Remove Duplicates

WITH RowNumCTE AS(
Select *,
	ROW_NUMBER() OVER (
	PARTITION BY ParcelID,
				 PropertyAddress,
				 SalePrice,
				 SaleDate,
				 LegalReference
				 ORDER BY
					UniqueID
					) row_num

From PortfolioProjectCOVID.dbo.NashvilleHousing
--order by ParcelID
)
Select *
From RowNumCTE
Where row_num > 1
Order by PropertyAddress



Select *
From PortfolioProjectCOVID.dbo.NashvilleHousing




---------------------------------------------------------------------------------------------------------

-- Delete Unused Columns



Select *
From PortfolioProjectCOVID.dbo.NashvilleHousing


ALTER TABLE PortfolioProjectCOVID.dbo.NashvilleHousing
DROP COLUMN OwnerAddress, TaxDistrict, PropertyAddress, SaleDate
